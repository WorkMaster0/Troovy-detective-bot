# ai_brain.py
import random
import re
from datetime import datetime
import requests

class AIBrain:
    def __init__(self):
        self.market_mood = "neutral"
        self.conversations = {}
        
    def get_ai_response(self, prompt, context=""):
        """–Ü–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –±–µ–∑ –≤–∞–∂–∫–∏—Ö ML –±—ñ–±–ª—ñ–æ—Ç–µ–∫"""
        # –ü—Ä–æ—Å—Ç–∏–π AI –Ω–∞ –±–∞–∑—ñ —à–∞–±–ª–æ–Ω—ñ–≤ —Ç–∞ –ø—Ä–∞–≤–∏–ª
        prompt_lower = prompt.lower()
        
        # –ö—Ä–∏–ø—Ç–æ-—Ç–µ–º–∞—Ç–∏–∫–∞
        crypto_patterns = {
            r'.*(btc|bitcoin|–±—ñ—Ç–∫–æ).*': [
                "‚Çø Bitcoin –∑–∞—Ä–∞–∑ –ø–æ–∫–∞–∑—É—î —Ü—ñ–∫–∞–≤—É –¥–∏–Ω–∞–º—ñ–∫—É. –ö–ª—é—á–æ–≤—ñ —Ä—ñ–≤–Ω—ñ: $60K-65K",
                "üìä BTC: –ê–Ω–∞–ª—ñ–∑—É—é—á–∏ –≥—Ä–∞—Ñ—ñ–∫, –±–∞—á—É –ø–æ—Ç–µ–Ω—Ü—ñ–∞–ª –¥–ª—è —Ä—É—Ö—É –¥–æ $70K",
                "‚ö° Bitcoin –≤–æ–ª–∞—Ç–∏–ª—å–Ω—ñ—Å—Ç—å –∑—Ä–æ—Å–ª–∞. –†–µ–∫–æ–º–µ–Ω–¥—É—é –æ–±–µ—Ä–µ–∂–Ω—ñ—Å—Ç—å"
            ],
            r'.*(eth|ethereum|–µ—Ç–µ—Ä).*': [
                "üî∑ Ethereum –º–∞—î —Å–∏–ª—å–Ω—É —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—á–Ω—É –±–∞–∑—É. –¶—ñ–∫–∞–≤—ñ —Ä—ñ–≤–Ω—ñ: $3K-3.5K",
                "üìà ETH –ø–æ–∫–∞–∑—É—î –≥–∞—Ä–Ω—É –≤—ñ–¥–¥–∞—á—É –≤—ñ–¥ —Ä—ñ–≤–Ω—ñ–≤ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏",
                "üíé Ethereum: DeFi —Å–µ–∫—Ç–æ—Ä –ø—Ä–æ–¥–æ–≤–∂—É—î –∑—Ä–æ—Å—Ç–∞—Ç–∏"
            ],
            r'.*(–∫—É–ø–∏—Ç–∏|buy|–ª–æ–Ω–≥|long).*': [
                "üéØ –î–ª—è –ø–æ–∫—É–ø–∫–∏ —à—É–∫–∞–π—Ç–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Ç—Ä–µ–Ω–¥—É –Ω–∞ —Å—Ç–∞—Ä—à–æ–º—É —Ç–∞–π–º—Ñ—Ä–µ–π–º—ñ",
                "üìä –ü–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ—é –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –æ–±—Å—è–≥–∏ - –≤–æ–Ω–∏ –º–∞—é—Ç—å –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É–≤–∞—Ç–∏ —Ä—É—Ö",
                "‚ö° –í—Ö–æ–¥—å—Ç–µ —Ç—ñ–ª—å–∫–∏ –ø—Ä–∏ –∫–æ–Ω—Å–µ–Ω—Å—É—Å—ñ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä—ñ–≤"
            ],
            r'.*(–ø—Ä–æ–¥–∞—Ç–∏|sell|—à–æ—Ä—Ç|short).*': [
                "üìâ –î–ª—è –ø—Ä–æ–¥–∞–∂—É —á–µ–∫–∞–π—Ç–µ –ø—Ä–æ–±–æ—é –∫–ª—é—á–æ–≤–∏—Ö –ø—ñ–¥—Ç—Ä–∏–º–æ–∫",
                "üî¥ Short –ø–æ–∑–∏—Ü—ñ—ó –≤–∏–º–∞–≥–∞—é—Ç—å –æ—Å–æ–±–ª–∏–≤–æ—ó –æ–±–µ—Ä–µ–∂–Ω–æ—Å—Ç—ñ",
                "‚ö° –°—Ç–æ–ø-–ª–æ—Å –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π –ø—Ä–∏ —à–æ—Ä—Ç—ñ!"
            ]
        }
        
        # –®—É–∫–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π —à–∞–±–ª–æ–Ω
        for pattern, responses in crypto_patterns.items():
            if re.search(pattern, prompt_lower):
                return random.choice(responses)
        
        # –ó–∞–≥–∞–ª—å–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        general_responses = [
            "üß† –Ø –∞–Ω–∞–ª—ñ–∑—É—é —Ä–∏–Ω–æ–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ. –Ø–∫–∏–π –∞–∫—Ç–∏–≤ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å?",
            "üí° –†–µ–∫–æ–º–µ–Ω–¥—É—é –¥–∏–≤–µ—Ä—Å–∏—Ñ—ñ–∫—É–≤–∞—Ç–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—å –º—ñ–∂ —Ä—ñ–∑–Ω–∏–º–∏ –∞–∫—Ç–∏–≤–∞–º–∏",
            "üìä –¢–µ—Ö–Ω—ñ—á–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –ø–æ–∫–∞–∑—É—î... –ß–µ–∫–∞–π—Ç–µ —á—ñ—Ç–∫–∏—Ö —Å–∏–≥–Ω–∞–ª—ñ–≤ –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º",
            "‚ö° –í–æ–ª–∞—Ç–∏–ª—å–Ω—ñ—Å—Ç—å –∑—Ä–æ—Å–ª–∞ - —ñ–¥–µ–∞–ª—å–Ω–∏–π —á–∞—Å –¥–ª—è —Å–∫–∞–ª—å–ø—ñ–Ω–≥—É!",
            "üéØ –ü–∞–º'—è—Ç–∞–π—Ç–µ –ø—Ä–æ —Ä–∏–∑–∏–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç! –ù–µ –±—ñ–ª—å—à–µ 2% –Ω–∞ —É–≥–æ–¥—É"
        ]
        
        return random.choice(general_responses)
    
    def analyze_market(self):
        """–ê–Ω–∞–ª—ñ–∑ —Ä–∏–Ω–∫—É –∑ —Ä–µ–∞–ª—å–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏"""
        try:
            # –°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∞–ª—å–Ω—ñ —Ü—ñ–Ω–∏
            btc_price = self.get_crypto_price("BTCUSDT")
            eth_price = self.get_crypto_price("ETHUSDT")
            
            analysis = f"""
üìä <b>–†–∏–Ω–æ–∫ –∑–∞—Ä–∞–∑:</b>

‚Çø Bitcoin: ${btc_price:,.2f}
üî∑ Ethereum: ${eth_price:,.2f}

<b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó CortexTrader:</b>
‚Ä¢ –ê–Ω–∞–ª—ñ–∑—É–π—Ç–µ 3+ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∏ –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º
‚Ä¢ –ß–µ–∫–∞–π—Ç–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—ñ–≤
‚Ä¢ –†–∏–∑–∏–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç - –æ—Å–Ω–æ–≤–∞ —É—Å–ø—ñ—Ö—É

üéØ <i>–ì–æ—Ç–æ–≤–∏–π –æ–±–≥–æ–≤–æ—Ä–∏—Ç–∏ –≤–∞—à—ñ —ñ–¥–µ—ó!</i>
            """
            return analysis
            
        except:
            # –†–µ–∑–µ—Ä–≤–Ω–∏–π –∞–Ω–∞–ª—ñ–∑
            return "üìà –†–∏–Ω–æ–∫ –ø–æ–∫–∞–∑—É—î —Å–µ—Ä–µ–¥–Ω—é –≤–æ–ª–∞—Ç–∏–ª—å–Ω—ñ—Å—Ç—å. –Ü–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Å–≤–∏–Ω–≥-—Ç—Ä–µ–π–¥–∏–Ω–≥—É!"
    
    def get_crypto_price(self, symbol):
        """–°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∞–ª—å–Ω—É —Ü—ñ–Ω—É"""
        try:
            url = f"https://api.binance.com/api/v3/ticker/price?symbol={symbol}"
            response = requests.get(url, timeout=5)
            data = response.json()
            return float(data['price'])
        except:
            # –†–µ–∑–µ—Ä–≤–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
            return random.uniform(40000, 45000) if symbol == "BTCUSDT" else random.uniform(2200, 2500)

# –†–µ—à—Ç–∞ –∫–æ–¥—É –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –±–µ–∑ –∑–º—ñ–Ω...
    
    def get_crypto_price(self, symbol):
        """–û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ü—ñ–Ω–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏ (—Å–ø—Ä–æ—â–µ–Ω–æ)"""
        # –¢—É—Ç –±—É–¥–µ —Ä–µ–∞–ª—å–Ω–∏–π API –≤—ã–∑–æ–≤, –ø–æ–∫–∏ —ñ–º—ñ—Ç—É—î–º–æ
        prices = {
            "BTCUSDT": random.uniform(40000, 45000),
            "ETHUSDT": random.uniform(2200, 2500),
            "SOLUSDT": random.uniform(90, 120)
        }
        return prices.get(symbol, 0)
    
    def start_discussion(self, user_id):
        """–ü–æ—á–∞—Ç–æ–∫ –¥—ñ–∞–ª–æ–≥—É"""
        self.conversations[user_id] = {
            'stage': 'awaiting_topic',
            'context': {}
        }
        
        questions = [
            "üß† <b>–î–∞–≤–∞–π—Ç–µ –æ–±–≥–æ–≤–æ—Ä–∏–º–æ —Ç–æ—Ä–≥–æ–≤—ñ —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó!</b>\n–Ø–∫–∏–π –∞–∫—Ç–∏–≤ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å –Ω–∞–π–±—ñ–ª—å—à–µ?",
            "üéØ <b>–ì–æ—Ç–æ–≤–∏–π –¥–æ –¥—ñ–∞–ª–æ–≥—É –ø—Ä–æ —Ç—Ä–µ–π–¥–∏–Ω–≥!</b>\n–†–æ–∑–∫–∞–∂—ñ—Ç—å –ø—Ä–æ –≤–∞—à —Ç–æ—Ä–≥–æ–≤–∏–π –ø—ñ–¥—Ö—ñ–¥?",
            "üí° <b>–û–±–≥–æ–≤–æ—Ä—é—î–º–æ —Ä–∏–Ω–æ–∫ —Ä–∞–∑–æ–º!</b>\n–Ø–∫—ñ –º–æ–Ω–µ—Ç–∏ –≤ –≤–∞—à–æ–º—É –ø–æ—Ä—Ç—Ñ–µ–ª—ñ?"
        ]
        
        return random.choice(questions)
    
    def continue_discussion(self, user_id, message):
        """–ü—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –¥—ñ–∞–ª–æ–≥—É"""
        if user_id not in self.conversations:
            return self.start_discussion(user_id)
        
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ AI –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        response = self.get_ai_response(
            message, 
            context="–æ–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è —Ç—Ä–µ–π–¥–∏–Ω–≥–æ–≤–∏—Ö —Å—Ç—Ä–∞—Ç–µ–≥—ñ–π"
        )
        
        return response

# –î–æ–¥–∞–π—Ç–µ —Ü—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –≤ cortex_trader.py