# ai_brain.py
import os
import openai
from datetime import datetime

class AIBrain:
    def __init__(self):
        self.market_mood = "neutral"
        self.conversations = {}
        openai.api_key = os.getenv("OPENAI_API_KEY")  # –∫–ª—é—á –∑ Render secrets

    def ai_answer(self, user_id, prompt):
        """–í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ OpenAI"""
        try:
            # –î—ñ—Å—Ç–∞—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é –¥—ñ–∞–ª–æ–≥—É
            history = self.conversations.get(user_id, {}).get("history", [])
            history.append({"role": "user", "content": prompt})

            response = openai.chat.completions.create(
                model="gpt-3.5-turbo",  # –º–æ–∂–µ—à –∑–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ "gpt-4o-mini"
                messages=history,
                max_tokens=500,
                temperature=0.7
            )

            answer = response.choices[0].message.content

            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —É –∫–æ–Ω—Ç–µ–∫—Å—Ç
            if user_id not in self.conversations:
                self.conversations[user_id] = {"history": []}
            self.conversations[user_id]["history"].append({"role": "assistant", "content": answer})

            return answer
        except Exception as e:
            return f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ AI: {e}"

    def analyze_market(self):
        """–¢–µ–ø–µ—Ä —Ç–µ–∂ –º–æ–∂–Ω–∞ —á–µ—Ä–µ–∑ AI"""
        return self.ai_answer("system", "–î–∞–π –∫–æ—Ä–æ—Ç–∫–∏–π –∞–Ω–∞–ª—ñ–∑ —Ä–∏–Ω–∫—É –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç —É 2-3 —Ä–µ—á–µ–Ω–Ω—è—Ö.")

    def start_discussion(self, user_id):
        """–ü–æ—á–∞—Ç–æ–∫ –¥—ñ–∞–ª–æ–≥—É"""
        self.conversations[user_id] = {"history": [{"role": "system", "content": "–¢–∏ –≤–∏—Å—Ç—É–ø–∞—î—à —è–∫ —Ç—Ä–µ–π–¥—ñ–Ω–≥–æ–≤–∏–π –∞—Å–∏—Å—Ç–µ–Ω—Ç."}]}
        return "üß† –ü–æ—á–∏–Ω–∞—î–º–æ –¥–∏—Å–∫—É—Å—ñ—é! –Ø–∫–∏–π –∞–∫—Ç–∏–≤ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å?"

    def continue_discussion(self, user_id, message):
        """–ü—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –¥—ñ–∞–ª–æ–≥—É –∑ AI"""
        return self.ai_answer(user_id, message)

    def process_message(self, message):
        """–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –∑–≤–∏—á–∞–π–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"""
        return self.ai_answer("general", message)