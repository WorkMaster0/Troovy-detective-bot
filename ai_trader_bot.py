# ai_trader_bot.py
import telebot
from datetime import datetime
import numpy as np
import requests
from enum import Enum

class Mood(Enum):
    BULLISH = "üü¢ –ë–∏—á–∏–π"
    BEARISH = "üî¥ –í–µ–¥–º–µ–∂–∏–π" 
    NEUTRAL = "‚ö™Ô∏è –ù–µ–π—Ç—Ä–∞–ª—å–Ω–∏–π"

class AITraderBot:
    def __init__(self, token):
        self.bot = telebot.TeleBot(token)
        self.mood = Mood.NEUTRAL
        self.conversation_history = []
        
    def analyze_market(self):
        """AI –∞–Ω–∞–ª—ñ–∑ —Ä–∏–Ω–∫—É"""
        # –¢—É—Ç –±—É–¥–µ –≤–∞—à–∞ AI –ª–æ–≥—ñ–∫–∞
        return "üìä –ê–Ω–∞–ª—ñ–∑—É—é —Ä–∏–Ω–æ–∫..."
    
    def discuss_strategy(self, message):
        """–û–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º"""
        user_id = message.from_user.id
        analysis = self.analyze_market()
        
        # –î–æ–¥–∞—î–º–æ –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó
        self.conversation_history.append({
            'user': user_id,
            'message': message.text,
            'time': datetime.now(),
            'analysis': analysis
        })
        
        # –í—ñ–¥–ø–æ–≤—ñ–¥—å AI
        response = self.generate_response(message.text, analysis)
        self.bot.reply_to(message, response)
    
    def generate_response(self, user_message, analysis):
        """–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑ AI"""
        # –¢—É—Ç –±—É–¥–µ GPT-4 –∞–±–æ –≤–ª–∞—Å–Ω–∞ AI –º–æ–¥–µ–ª—å
        responses = [
            f"üß† –ù–∞ –æ—Å–Ω–æ–≤—ñ –∞–Ω–∞–ª—ñ–∑—É: {analysis}\nüí¨ –í–∞—à–∞ –¥—É–º–∫–∞?",
            f"üìà –û—Å—å —â–æ —è –±–∞—á—É: {analysis}\nüéØ –Ø–∫ –±–∏ –≤–∏ –≤—á–∏–Ω–∏–ª–∏?",
            f"ü§ñ –ú—ñ–π –∞–Ω–∞–ª—ñ–∑: {analysis}\nüí° –†–∞–¥–∏–π –æ–±–≥–æ–≤–æ—Ä–∏—Ç–∏ —Ü–µ!"
        ]
        return np.random.choice(responses)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
ai_bot = AITraderBot("YOUR_TOKEN")

@ai_bot.bot.message_handler(commands=['start', 'discuss'])
def handle_discussion(message):
    ai_bot.discuss_strategy(message)

if __name__ == "__main__":
    ai_bot.bot.infinity_polling()