# cortex_trader.py
import telebot
import requests
import numpy as np
from datetime import datetime
import json
import os
from ai_brain import AIBrain  # –ù–∞—à AI –º–æ–¥—É–ª—å

class CortexTrader:
    def __init__(self, token):
        self.bot = telebot.TeleBot(token, parse_mode="HTML")
        self.brain = AIBrain()
        self.user_sessions = {}
        
        # –†–µ—î—Å—Ç—Ä—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏
        self.register_handlers()
    
    def register_handlers(self):
        """–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"""
        
        @self.bot.message_handler(commands=['start', 'cortex'])
        def welcome(message):
            welcome_text = """
            üß† <b>CortexTrader</b> - –≤–∞—à AI —Ç—Ä–µ–π–¥—ñ–Ω–≥–æ–≤–∏–π –ø–æ–º—ñ—á–Ω–∏–∫!
            
            <b>–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:</b>
            /analyze - –ê–Ω–∞–ª—ñ–∑ —Ä–∏–Ω–∫—É
            /discuss - –û–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó
            /mood - –ù–∞—Å—Ç—Ä—ñ–π —Ä–∏–Ω–∫—É
            /help - –î–æ–ø–æ–º–æ–≥–∞
            
            <i>–Ø –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏! üöÄ</i>
            """
            self.bot.reply_to(message, welcome_text)
        
        @self.bot.message_handler(commands=['analyze'])
        def analyze_market(message):
            """–ê–Ω–∞–ª—ñ–∑ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ä–∏–Ω–∫—É"""
            analysis = self.brain.analyze_market()
            self.bot.reply_to(message, analysis)
        
        @self.bot.message_handler(commands=['discuss'])
        def discuss_strategy(message):
            """–û–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è —Ç–æ—Ä–≥–æ–≤–æ—ó —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó"""
            user_id = message.from_user.id
            
            # –ü–æ—á–∞—Ç–æ–∫ –¥—ñ–∞–ª–æ–≥—É
            response = self.brain.start_discussion(user_id)
            self.bot.reply_to(message, response)
            
            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å–µ—Å—ñ—é
            self.user_sessions[user_id] = {
                'in_discussion': True,
                'last_message': datetime.now()
            }
        
        @self.bot.message_handler(func=lambda message: True)
        def handle_all_messages(message):
            """–û–±—Ä–æ–±–∫–∞ –≤—Å—ñ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
            user_id = message.from_user.id
            
            if user_id in self.user_sessions and self.user_sessions[user_id]['in_discussion']:
                # –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –¥—ñ–∞–ª–æ–≥
                response = self.brain.continue_discussion(user_id, message.text)
                self.bot.reply_to(message, response)
            else:
                # –ó–≤–∏—á–∞–π–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
                response = self.brain.process_message(message.text)
                self.bot.reply_to(message, response)

    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        print("üß† CortexTrader –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è...")
        self.bot.infinity_polling()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    TOKEN = os.getenv('TELEGRAM_TOKEN', 'YOUR_TOKEN_HERE')
    trader_bot = CortexTrader(TOKEN)
    trader_bot.run()